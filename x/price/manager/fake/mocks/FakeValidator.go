// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	linotypes "github.com/lino-network/lino/types"
	fake "github.com/lino-network/lino/x/price/manager/fake"

	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// FakeValidator is an autogenerated mock type for the FakeValidator type
type FakeValidator struct {
	mock.Mock
}

// DoesValidatorExist provides a mock function with given fields: ctx, user
func (_m *FakeValidator) DoesValidatorExist(ctx types.Context, user linotypes.AccountKey) bool {
	ret := _m.Called(ctx, user)

	var r0 bool
	if rf, ok := ret.Get(0).(func(types.Context, linotypes.AccountKey) bool); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetValidatorAndVotes provides a mock function with given fields: ctx
func (_m *FakeValidator) GetValidatorAndVotes(ctx types.Context) []fake.ValidatorAndVote {
	ret := _m.Called(ctx)

	var r0 []fake.ValidatorAndVote
	if rf, ok := ret.Get(0).(func(types.Context) []fake.ValidatorAndVote); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]fake.ValidatorAndVote)
		}
	}

	return r0
}
