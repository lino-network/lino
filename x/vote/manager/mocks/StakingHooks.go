// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import linotypes "github.com/lino-network/lino/types"

import mock "github.com/stretchr/testify/mock"
import types "github.com/cosmos/cosmos-sdk/types"

// StakingHooks is an autogenerated mock type for the StakingHooks type
type StakingHooks struct {
	mock.Mock
}

// AfterAddingStake provides a mock function with given fields: ctx, username
func (_m *StakingHooks) AfterAddingStake(ctx types.Context, username linotypes.AccountKey) types.Error {
	ret := _m.Called(ctx, username)

	var r0 types.Error
	if rf, ok := ret.Get(0).(func(types.Context, linotypes.AccountKey) types.Error); ok {
		r0 = rf(ctx, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.Error)
		}
	}

	return r0
}

// AfterSubtractingStake provides a mock function with given fields: ctx, username
func (_m *StakingHooks) AfterSubtractingStake(ctx types.Context, username linotypes.AccountKey) types.Error {
	ret := _m.Called(ctx, username)

	var r0 types.Error
	if rf, ok := ret.Get(0).(func(types.Context, linotypes.AccountKey) types.Error); ok {
		r0 = rf(ctx, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.Error)
		}
	}

	return r0
}
